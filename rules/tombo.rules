'''
##############################################################################
# TOMBO Methylation calling
##############################################################################

Note that tombo requires SINGLE fast5 files. They are expected to be in the
directory raw/samplename/single.
'''

'''
Creates index of fast5 raw files for Tombo
'''
rule tombo_make_index:
    input: os.path.join(basedir, 'raw/{sample}/single/')
    output: os.path.join(basedir, 'raw/{sample}/.single.RawGenomeCorrected_000.tombo.index')
    params:
        jobname='tombo_make_index',
        runtime='24:00',
        memusage='16000',
        slots='1',
        misc=''
    shell: '{tombo} filter clear_filters --fast5-basedirs {input}'

'''
Uses Tombo resquiggle to segment the raw signal and align it to the bases.
Note that the output file ".single.resquiggled" does not really contain any
information. It's only there as a marker that resquiggling has been performed.
Tombo resquiggle modifies the input files, so the actual output is actually
written into the inputfiles.

CAVEAT: This manipulates the original fast5 files.
'''
rule tombo_resquiggle:
    input: 
        index=rules.tombo_make_index.output,
        directory=rules.tombo_make_index.input
    output: os.path.join(basedir, 'raw/{sample}/.single.resquiggled')
    params:
        jobname='tombo_resquiggle',
        runtime='48:00',
        memusage='16000',
        slots='32',
        misc=''
    shell: '''
           {tombo} resquiggle --processes 32 --dna {input.directory} {reference};
           RESULT=$?
           if [[ $RESULT -eq 0 ]] ; then touch {output}; fi
           exit $RESULT
           '''

'''
Perform tombo methylation calling for 6mA and 5mC
'''
rule tombo_metcall:
    input: resquiggled=rules.tombo_resquiggle.output,
           directory=rules.tombo_make_index.input
    output: stats_6ma=os.path.join(basedir, 'tombo/{sample}.6mA.tombo.stats'),
            stats_5mc=os.path.join(basedir, 'tombo/{sample}.5mC.tombo.stats')
    params:
        jobname='tombo_metcall',
        runtime='48:00',
        memusage='16000',
        slots='32',
        misc=''
    shell: '''
           {tombo} detect_modifications alternative_model --fast5-basedirs {input.directory} --statistics-file-basename {basedir}/tombo/{wildcards.sample} --alternate-bases 6mA 5mC --processes 32
           '''  
        
rule all_tombo_metcall:
    input: expand(rules.tombo_metcall.output.stats_5mc, sample=unique_samples)

'''
Perform tombo methylation calling for 6mA and 5mC
'''
rule tombo_de_novo:
    input: resquiggled=rules.tombo_resquiggle.output,
           directory=rules.tombo_make_index.input
    output: stats=os.path.join(basedir, 'tombo/{sample}_denovo.tombo.stats'),
    params:
        jobname='tombo_metcall',
        runtime='48:00',
        memusage='16000',
        slots='32',
        misc=''
    shell: '''
           {tombo} detect_modifications de_novo --fast5-basedirs {input.directory} --statistics-file-basename {basedir}/tombo/{wildcards.sample}_denovo --processes 32
           '''  

rule all_tombo_de_novo:
    input: expand(rules.tombo_de_novo.output.stats, sample=unique_samples)

